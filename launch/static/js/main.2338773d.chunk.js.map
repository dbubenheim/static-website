{"version":3,"sources":["images/micronaut.png","images/micronaut-white.png","images/micronaut-white-icon.png","components/FeatureSelector/FeatureAvailable.js","components/FeatureSelector/FeatureSelected.js","components/TextInput.js","components/TooltipButton/TooltipButton.js","components/TooltipButton/index.js","components/FeatureSelector/FeatureSelector.js","utility.js","components/CodePreview/index.js","components/CodePreview/CodePreview.js","components/Diff.js","components/GitHubLink.js","components/TwitterLink.js","components/InfoButton.js","components/Header/Header.js","components/Header/index.js","components/RadioGroup.js","components/Select/Select.js","components/Select/index.js","constants/index.js","components/StarterForm/StarterForm.js","components/StarterForm/index.js","components/ErrorView/ErrorView.js","components/ErrorView/index.js","App.jsx","index.js"],"names":["module","exports","FeatureAvailable","feature","toggleFeatures","id","name","className","selected","title","onClick","e","description","floating","small","style","position","top","right","closeButtonStyle","cursor","float","fontSize","lineHeight","paddingLeft","FeatureSelected","onRemoveFeature","marginRight","preventDefault","TextInput","onChangeText","rest","onChange","event","Function","text","target","value","theme","createMuiTheme","overrides","MuiTooltip","tooltip","TooltipButton","children","props","Tooltip","enterDelay","enterNextDelay","enterTouchDelay","arrow","placement","FeatureAvailableGroup","category","entities","s","map","i","key","FeatureSelectedList","selectedFeatures","selectedFeatureValues","Object","values","sort","a","b","sRows","useMemo","f","idx","length","height","minHeight","FeatureSelectorModal","features","loading","onAddFeature","onRemoveAllFeatures","useState","search","setSearch","selectedFeatureKeys","keys","availableFeatures","includes","searchResults","lcSearch","toLowerCase","filter","groupedResults","reduce","result","push","marginBottom","fixedFooter","actions","waves","flat","modal","options","onCloseStart","firstElementChild","scrollTop","startingTop","endingTop","trigger","messages","tooltips","width","left","label","placeholder","autoComplete","index","capitalize","charAt","toUpperCase","slice","CodePreview","forwardRef","ref","preview","lang","build","disabled","onLoad","onClose","contents","language","currentFile","setCurrentFile","Fragment","header","display","Grid","container","item","xs","borderRight","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","defaultExpanded","renderTree","nodes","key1","key2","key1Object","key2Object","TreeItem","nodeId","lastIndexOf","substring","handleFileSelection","lineNumberContainerProps","prism","darcula","showLineNumbers","diff","GitHubLink","backgroundColor","href","rel","TwitterLink","color","Avatar","InfoButton","Header","info","onToggleTheme","onShowInfo","active","setActive","useEffect","listener","window","addEventListener","removeEventListener","src","logoLight","logoDark","alt","zIndex","stopPropagation","marginLeft","RadioGroup","option","htmlFor","type","checked","Select","FormControl","InputLabel","labelId","opt","MenuItem","API_URL","MICRONAUT_VERSIONS","LANG_OPTS","BUILD_OPTS","TEST_OPTS","JAVA_OPTS","v","toString","StarterForm","handleChange","l","m","types","t","javaVersion","required","package","testFw","React","memo","error","errorMessage","open","Boolean","Snackbar","anchorOrigin","vertical","horizontal","Alert","icon","logo","severity","next","prev","ErrorView","App","loadAppTypes","fetch","then","response","ok","json","Error","data","console","log","forEach","setState","catch","message","loadFeatures","appType","loadingFeatures","featuresToSelect","addFeature","featuresSelected","state","removeAllFeatures","removeFeature","replace","buildFeaturesQuery","array","join","buildFetchUrl","prefix","fqpkg","base","query","encodeURI","handleResponseError","defaultError","downloading","body","responseHandler","debounceResponse","start","atLeast","Date","now","Promise","r","setTimeout","Math","max","generateProject","FETCH_URL","debounced","method","blob","url","URL","createObjectURL","document","createElement","download","appendChild","click","remove","loadPreview","obj","node","k","folders","split","rootNode","makeNodeTree","previewButton","loadDiff","diffButton","clearDiff","clearPreview","styleMode","localStorage","getItem","this","getStyleMode","setItem","toggleStyleMode","onSubmit","button","generate","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2338773d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/micronaut.17218b32.png\";","module.exports = __webpack_public_path__ + \"static/media/micronaut-white.c5a41bad.png\";","module.exports = __webpack_public_path__ + \"static/media/micronaut-white-icon.6d5a6522.png\";","// FeatureSelector.js\nimport React from \"react\";\n\nimport { Button, Card } from \"react-materialize\";\nimport Icon from \"react-materialize/lib/Icon\";\n\nconst FeatureAvailable = ({ feature, toggleFeatures }) => {\n    return (\n        <Card\n            id={`mn-feature-${feature.name}`}\n            className={`mn-feature-selection hoverable ${feature.selected &&\n                \"selected\"}`}\n            title={feature.name}\n            onClick={(e) => toggleFeatures(e, feature)}\n        >\n            <p className=\"grey-text\">{feature.description}</p>\n            {feature.selected && (\n                <Button\n                    floating\n                    small\n                    style={{ position: \"absolute\", top: -12, right: -15 }}\n                    className=\"black remove-button\"\n                >\n                    <Icon>close</Icon>\n                </Button>\n            )}\n        </Card>\n    );\n};\n\nexport default FeatureAvailable;\n","// FeatureSelected.js\nimport React from \"react\";\n\nconst closeButtonStyle = {\n    cursor: \"pointer\",\n    float: \"right\",\n    fontSize: \"16px\",\n    lineHeight: \"32px\",\n    paddingLeft: \"8px\",\n};\n\nconst FeatureSelected = ({ feature, onRemoveFeature }) => {\n    return (\n        <div style={{ marginRight: 10 }} className=\"chip\">\n            {feature.name}\n            <i\n                onClick={(e) => {\n                    e.preventDefault();\n                    onRemoveFeature(feature);\n                }}\n                className=\"material-icons\"\n                style={closeButtonStyle}\n            >\n                close\n            </i>\n        </div>\n    );\n};\n\nexport default FeatureSelected;\n","// TextInput.js\nimport React from \"react\";\nimport MaterialTextInput from \"react-materialize/lib/TextInput\";\n\nconst TextInput = ({ onChangeText, ...rest }) => {\n    const onChange = (event) => {\n        if (onChangeText instanceof Function) {\n            const text = event.target.value;\n            onChangeText(text);\n        }\n        if (rest.onChange instanceof Function) {\n            rest.onChange(event);\n        }\n    };\n\n    return <MaterialTextInput {...rest} onChange={onChange} />;\n};\n\nexport default TextInput;\n","// TooltipButton.js\nimport React from \"react\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Button } from \"react-materialize\";\nimport {\n    createMuiTheme,\n    MuiThemeProvider\n} from \"@material-ui/core/styles\";\n\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiTooltip: {\n            tooltip: {\n                fontSize: \"0.9em\",\n            }\n        }\n    }\n});\n\nconst TooltipButton = ({ tooltip, children, ...props }) => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Tooltip enterDelay={600} enterNextDelay={350} enterTouchDelay={300} title={tooltip} arrow placement=\"top\">\n                <span>\n                    <Button {...props}>{children}</Button>\n                </span>\n            </Tooltip>\n        </MuiThemeProvider>\n    );\n};\n\nexport default TooltipButton;\n","import TooltipButton from \"./TooltipButton\";\nimport \"./tooltip-button.css\";\n\nexport default TooltipButton;","// FeatureSelector.js\nimport React, { useMemo, useState } from \"react\";\n\nimport Modal from \"react-materialize/lib/Modal\";\nimport { Button } from \"react-materialize\";\nimport Icon from \"react-materialize/lib/Icon\";\nimport Col from \"react-materialize/lib/Col\";\nimport Preloader from \"react-materialize/lib/Preloader\";\nimport Row from \"react-materialize/lib/Row\";\nimport FeatureAvailable from \"./FeatureAvailable\";\nimport FeatureSelected from \"./FeatureSelected\";\nimport TextInput from \"../TextInput\";\n\nimport messages from \"../../constants/messages.json\";\nimport TooltipButton from \"../TooltipButton\";\n\nimport \"./feature-selector.css\";\n\nconst FeatureAvailableGroup = ({ category, entities, toggleFeatures }) => {\n    return (\n        <Row>\n            <Col s={12}>\n                <h6>{category}</h6>\n            </Col>\n            {entities.map((feature, i) => (\n                <Col s={12} key={i}>\n                    <FeatureAvailable\n                        feature={feature}\n                        toggleFeatures={toggleFeatures}\n                    />\n                </Col>\n            ))}\n        </Row>\n    );\n};\n\nexport const FeatureSelectedList = ({ selectedFeatures, onRemoveFeature }) => {\n    const selectedFeatureValues = Object.values(selectedFeatures).sort(\n        (a, b) => {\n            return a.name > b.name ? 1 : -1;\n        }\n    );\n\n    const sRows = useMemo(\n        () =>\n            selectedFeatureValues.map((f, idx) => (\n                <FeatureSelected\n                    key={`${f.name}-${idx}`}\n                    feature={f}\n                    onRemoveFeature={() => onRemoveFeature(f)}\n                />\n            )),\n        [selectedFeatureValues, onRemoveFeature]\n    );\n\n    return (\n        <div className=\"col s12\">\n            <h6>Included Features ({selectedFeatureValues.length})</h6>\n            {sRows}\n            <div style={{ height: 100, minHeight: 100 }} />\n        </div>\n    );\n};\n\nexport const FeatureSelectorModal = ({\n    features,\n    selectedFeatures,\n    loading,\n    onAddFeature,\n    onRemoveFeature,\n    onRemoveAllFeatures,\n    theme = \"light\",\n}) => {\n    const [search, setSearch] = useState(\"\");\n    const selectedFeatureKeys = Object.keys(selectedFeatures);\n    const availableFeatures = useMemo(() => {\n        return features.map((feature) => {\n            return {\n                ...feature,\n                selected: selectedFeatureKeys.includes(feature.name),\n            };\n        });\n    }, [features, selectedFeatureKeys]);\n\n    const searchResults = useMemo(() => {\n        if (!search.length) {\n            return availableFeatures;\n        }\n        const lcSearch = search.toLowerCase();\n        return availableFeatures.filter((feature) => {\n            const { name, description, category } = feature;\n            return (\n                name.toLowerCase().includes(lcSearch) ||\n                description.toLowerCase().includes(lcSearch) ||\n                category.toLowerCase().includes(lcSearch)\n            );\n        });\n    }, [search, availableFeatures]);\n\n    const groupedResults = useMemo(() => {\n        return searchResults.reduce((map, result) => {\n            if (!map[result.category]) {\n                map[result.category] = [result];\n            } else {\n                map[result.category].push(result);\n            }\n            return map;\n        }, {});\n    }, [searchResults]);\n\n    const toggleFeatures = (event, feature) => {\n        if (event && event.preventDefault) {\n            event.preventDefault();\n        }\n        feature.selected ? onRemoveFeature(feature) : onAddFeature(feature);\n    };\n\n    const removeAll = (event) => {\n        event.preventDefault();\n        onRemoveAllFeatures();\n    };\n\n    const onModalClose = (event) => {\n        const { firstElementChild } = event;\n        firstElementChild.scrollTop = 0;\n    };\n\n    return (\n        <div id=\"feature-selector-wrapper\" style={{ marginBottom: 0 }}>\n            <Modal\n                className={`mn-feature-modal modal-lg ${theme}`}\n                fixedFooter\n                actions={[\n                    <Button waves=\"light\" onClick={removeAll} flat>\n                        Remove All ({selectedFeatureKeys.length})\n                    </Button>,\n                    <Button waves=\"light\" modal=\"close\" flat>\n                        Done\n                    </Button>,\n                ]}\n                options={{\n                    onCloseStart: onModalClose,\n                    startingTop: \"5%\",\n                    endingTop: \"5%\",\n                }}\n                trigger={\n                    <TooltipButton\n                        tooltip={messages.tooltips.features}\n                        waves=\"light\"\n                        className={theme}\n                        style={{ marginRight: \"5px\", width: \"100%\" }}\n                    >\n                        <Icon className=\"action-button-icon\" left>\n                            add\n                        </Icon>\n                        Features\n                    </TooltipButton>\n                }\n            >\n                <h4>\n                    <div className=\"modal-header\">\n                        <TextInput\n                            className=\"mn-input\"\n                            s={12}\n                            label=\"Search Features\"\n                            placeholder=\"ex: cassandra\"\n                            name=\"search\"\n                            value={search}\n                            autoComplete=\"off\"\n                            onChangeText={setSearch}\n                        />\n                    </div>\n                </h4>\n                {loading ? (\n                    <Preloader />\n                ) : (\n                    <Col s={12}>\n                        {searchResults.length === 0 && (\n                            <p>No matching features</p>\n                        )}\n                        {Object.keys(groupedResults).map((key, index) => {\n                            return (\n                                <FeatureAvailableGroup\n                                    key={key}\n                                    category={key}\n                                    entities={groupedResults[key]}\n                                    toggleFeatures={toggleFeatures}\n                                />\n                            );\n                        })}\n                    </Col>\n                )}\n            </Modal>\n        </div>\n    );\n};\n\nexport default FeatureSelectorModal;\n","export const capitalize = (s) => {\n    if (typeof s !== \"string\") return \"\";\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const makeNodeTree = (data) => {\n    let nodes = {};\n    let obj = data;\n    let node = nodes;\n    let keys = Object.keys(obj);\n    for (let k = 0; k < keys.length; k++) {\n        let key = keys[k];\n        let folders = key.split(\"/\");\n        let rootNode = node;\n        for (let i = 0; i < folders.length; i++) {\n            if (i === folders.length - 1) {\n                node[folders[i]] = obj[key];\n            } else {\n                node[folders[i]] = node[folders[i]] || {};\n                node = node[folders[i]];\n            }\n        }\n        node = rootNode;\n    }\n    return nodes;\n};\n","import CodePreview from \"./CodePreview\";\n\nexport default CodePreview;\n","// CodePreview.js\nimport React, { useState, forwardRef } from \"react\";\n\nimport { Button } from \"react-materialize\";\n\nimport Icon from \"react-materialize/lib/Icon\";\nimport Modal from \"react-materialize/lib/Modal\";\n\nimport TreeView from \"@material-ui/lab/TreeView\";\nimport TreeItem from \"@material-ui/lab/TreeItem\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { darcula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { prism } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nimport { capitalize } from \"../../utility\";\nimport messages from \"../../constants/messages.json\";\nimport TooltipButton from \"../TooltipButton\";\n\nconst CodePreview = (\n  { preview, lang, build, theme = \"light\", disabled, onLoad, onClose },\n  ref\n) => {\n  const [currentFile, setCurrentFile] = useState({\n    contents: null,\n    language: null,\n  });\n\n  const onModalClose = () => {\n    setCurrentFile({\n      contents: null,\n      language: null,\n    });\n    if (onClose instanceof Function) {\n      onClose();\n    }\n  };\n\n  const handleFileSelection = (key, contents) => {\n    if (typeof contents === \"string\") {\n      let idx = key.lastIndexOf(\".\");\n      let language;\n      if (idx > -1) {\n        language = key.substring(idx + 1);\n        if (language === \"gradle\") {\n          language = \"groovy\";\n        }\n        if (language === \"bat\") {\n          language = \"batch\";\n        }\n        if (language === \"kt\") {\n          language = \"kotlin\";\n        }\n      } else {\n        language = \"bash\";\n      }\n      setCurrentFile({ contents, language });\n    }\n  };\n\n  const renderTree = (nodes) => {\n    if (nodes instanceof Object) {\n      return Object.keys(nodes)\n        .sort(function order(key1, key2) {\n          let key1Object = typeof nodes[key1] === \"object\";\n          let key2Object = typeof nodes[key2] === \"object\";\n          if (key1Object && !key2Object) {\n            return -1;\n          } else if (!key1Object && key2Object) {\n            return 1;\n          } else {\n            if (key1 < key2) return -1;\n            else if (key1 > key2) return +1;\n            else return 0;\n          }\n        })\n        .map((key) => {\n          let children = nodes[key];\n          return (\n            <TreeItem\n              key={key}\n              nodeId={key}\n              label={key}\n              onClick={() => handleFileSelection(key, children)}\n            >\n              {renderTree(children)}\n            </TreeItem>\n          );\n        });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <TooltipButton\n        tooltip={messages.tooltips.preview}\n        disabled={disabled}\n        waves=\"light\"\n        className={theme}\n        style={{ marginRight: \"5px\", width: \"100%\" }}\n        onClick={onLoad}\n      >\n        <Icon className=\"action-button-icon\" left>\n          search\n        </Icon>\n        Preview\n      </TooltipButton>\n      <Modal\n        header={\n          \"Previewing a \" +\n          capitalize(lang) +\n          \" application using \" +\n          capitalize(build)\n        }\n        className={\"preview \" + theme}\n        fixedFooter\n        options={{\n          onCloseStart: onModalClose,\n          startingTop: \"5%\",\n          endingTop: \"5%\",\n        }}\n        actions={\n          <Button waves=\"light\" modal=\"close\" flat>\n            Close\n          </Button>\n        }\n        trigger={\n          <Button\n            ref={ref}\n            disabled={disabled}\n            waves=\"light\"\n            className={theme}\n            style={{ display: \"none\" }}\n            onClick={onLoad}\n          >\n            <Icon left>search</Icon>\n            Preview\n          </Button>\n        }\n      >\n        <Grid container className=\"grid-container\">\n          <Grid\n            item\n            xs={3}\n            className={\"grid-column\"}\n            style={{ borderRight: \"1px solid\" }}\n          >\n            <TreeView\n              defaultCollapseIcon={<Icon>folder_open</Icon>}\n              defaultExpandIcon={<Icon>folder</Icon>}\n              defaultEndIcon={<Icon>description</Icon>}\n              defaultExpanded={[\"src\", \"main\"]}\n            >\n              {renderTree(preview)}\n            </TreeView>\n          </Grid>\n          <Grid item xs={9} className={\"grid-column\"}>\n            {currentFile.contents && (\n              <SyntaxHighlighter\n                className=\"codePreview\"\n                lineNumberContainerProps={{\n                  className: \"lineNumbers\",\n                }}\n                language={currentFile.language}\n                style={theme === \"light\" ? prism : darcula}\n                showLineNumbers={true}\n              >\n                {currentFile.contents}\n              </SyntaxHighlighter>\n            )}\n          </Grid>\n        </Grid>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default forwardRef(CodePreview);\n","// Diff.js\nimport React, { forwardRef } from \"react\";\n\nimport { Button } from \"react-materialize\";\n\nimport Icon from \"react-materialize/lib/Icon\";\nimport Modal from \"react-materialize/lib/Modal\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { darcula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { prism } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nimport TooltipButton from \"./TooltipButton\";\nimport messages from \"../constants/messages.json\";\nimport { capitalize } from \"../utility\";\n\nconst Diff = (\n  { diff, lang, build, theme = \"light\", disabled, onLoad, onClose },\n  ref\n) => {\n  return (\n    <React.Fragment>\n      <TooltipButton\n        tooltip={messages.tooltips.diff}\n        disabled={disabled}\n        waves=\"light\"\n        className={theme}\n        style={{ marginRight: \"5px\", width: \"100%\" }}\n        onClick={onLoad}\n      >\n        <Icon className=\"action-button-icon\" left>\n          compare_arrows\n        </Icon>\n        Diff\n      </TooltipButton>\n\n      <Modal\n        header={\n          \"Showing Diff for a \" +\n          capitalize(lang) +\n          \" application using \" +\n          capitalize(build)\n        }\n        className={\"diff \" + theme}\n        fixedFooter\n        options={{\n          onCloseStart: onClose,\n          startingTop: \"5%\",\n          endingTop: \"5%\",\n        }}\n        actions={\n          <Button waves=\"light\" modal=\"close\" flat>\n            Close\n          </Button>\n        }\n        trigger={\n          <Button\n            ref={ref}\n            disabled={disabled}\n            waves=\"light\"\n            className={theme}\n            style={{ display: \"none\" }}\n            onClick={onLoad}\n          >\n            <Icon left>compare_arrows</Icon>\n            Diff\n          </Button>\n        }\n      >\n        <Grid container className=\"grid-container\">\n          <Grid item xs={12} className={\"grid-column\"}>\n            {diff && (\n              <SyntaxHighlighter\n                className=\"codePreview\"\n                lineNumberContainerProps={{\n                  className: \"lineNumbers\",\n                }}\n                language=\"diff\"\n                style={theme === \"light\" ? prism : darcula}\n                showLineNumbers={true}\n              >\n                {diff}\n              </SyntaxHighlighter>\n            )}\n          </Grid>\n        </Grid>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default forwardRef(Diff);\n","// GitHubLink.js\nimport React from \"react\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nexport const GitHubLink = ({ className, theme }) => {\n    const backgroundColor = theme === \"dark\" ? \"var(--theme-dark)\" : \"white\";\n\n    return (\n        <a\n            href=\"https://github.com/micronaut-projects\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className={className}\n            style={{ backgroundColor }}\n        >\n            <GitHubIcon style={{ fontSize: 32 }} />\n        </a>\n    );\n};\nexport default GitHubLink;\n","// TwitterLink.js\nimport React from \"react\";\n\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nexport const TwitterLink = ({ className, theme }) => {\n    const backgroundColor =\n        theme === \"dark\" ? \"var(--theme-light)\" : \"var(--theme-dark)\";\n    const color = theme === \"dark\" ? \"var(--theme-dark)\" : \"white\";\n    const size = 32;\n\n    return (\n        <a\n            href=\"https://twitter.com/micronautfw\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className={className}\n        >\n            <Avatar style={{ height: size, width: size, backgroundColor }}>\n                <TwitterIcon style={{ color }} />\n            </Avatar>\n        </a>\n    );\n};\nexport default TwitterLink;\n","// Footer.js\nimport React from \"react\";\nimport { Button } from \"react-materialize\";\nimport Modal from \"react-materialize/lib/Modal\";\nimport Icon from \"react-materialize/lib/Icon\";\n\nconst InfoButton = ({ className = \"\", theme, style }) => {\n  return (\n    <Modal\n      header=\"What's this?\"\n      className={theme}\n      actions={\n        <Button waves=\"light\" modal=\"close\" flat>\n          Close\n        </Button>\n      }\n      trigger={\n        <Button style={style} floating className={`${theme} ${className}`}>\n          <Icon>info</Icon>\n        </Button>\n      }\n    >\n      <p>\n        Micronaut Launch is a web application that allows you to create\n        Micronaut projects through an interface instead of using the console\n        CLI. You can set the application type, the project name, the language\n        (Java, Kotlin, Groovy), the build tool (Maven, Gradle), the Java version\n        and the features you need to develop your software.\n      </p>\n    </Modal>\n  );\n};\n\nexport default InfoButton;\n","// Header.js\nimport React, { useState, useEffect } from \"react\";\nimport GitHub from \"../GitHubLink\";\nimport Twitter from \"../TwitterLink\";\nimport InfoButton from \"../InfoButton\";\nimport { Button } from \"react-materialize\";\nimport Icon from \"react-materialize/lib/Icon\";\n\nimport logoLight from \"../../images/micronaut.png\";\nimport logoDark from \"../../images/micronaut-white.png\";\n\nconst Header = ({ info, theme, onToggleTheme, onShowInfo }) => {\n    const [active, setActive] = useState(false);\n    const toggle = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setActive((a) => !a);\n    };\n\n    useEffect(() => {\n        const listener = (e) => {\n            setActive(false);\n        };\n        window.addEventListener(\"click\", listener);\n        return () => window.removeEventListener(\"click\", listener);\n    }, []);\n\n    return (\n        <div className=\"mn-header d-flex\">\n            <div className=\"logo-wrapper\">\n                <a href=\"https://micronaut.io\">\n                    <img\n                        src={theme === \"light\" ? logoLight : logoDark}\n                        alt=\"Micronaut\"\n                        className=\"mn-logo\"\n                    />\n                </a>\n            </div>\n            <span className={`icon-wrapper ${active && \"active\"}`}>\n                <div\n                    className=\"mobile-icon-control\"\n                    style={{ zIndex: 4000 }}\n                    onClick={toggle}\n                >\n                    <Button\n                        floating\n                        className={`${theme} header-icon`}\n                        style={{ marginLeft: \"5px\" }}\n                    >\n                        <Icon>add</Icon>\n                    </Button>\n                </div>\n                <div>\n                    <InfoButton theme={theme} className=\"header-icon\" />\n                </div>\n                <div>\n                    <Button\n                        floating\n                        className={`${theme} header-icon`}\n                        onClick={onToggleTheme}\n                        style={{ marginLeft: \"5px\" }}\n                    >\n                        <Icon>brightness_medium</Icon>\n                    </Button>\n                </div>\n                <div>\n                    <GitHub theme={theme} className=\"header-icon\" />\n                </div>\n                <div>\n                    <Twitter theme={theme} className=\"header-icon\" />\n                </div>\n            </span>\n        </div>\n    );\n};\n\nexport default Header;\n","import Header from \"./Header\";\nimport \"./header.css\";\n\nexport default Header;\n","// RadioGroup.js\nimport React from \"react\";\n\nconst RadioGroup = ({ name, label, options, id, value, onChange }) => {\n    return (\n        <div className=\"radio-group\">\n            {typeof label === \"string\" && (\n                <label className=\"input-field\">{label}</label>\n            )}\n            {options.map((option, idx) => {\n                return (\n                    <label\n                        key={`${idx}-${option.value}`}\n                        className=\"radio-label\"\n                        htmlFor={`${id}-radio-${idx}`}\n                    >\n                        <input\n                            id={`${id}-radio-${idx}`}\n                            type=\"radio\"\n                            name={name}\n                            value={option.value}\n                            checked={value === option.value}\n                            onChange={onChange}\n                        />\n                        <span>{option.label}</span>\n                    </label>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default RadioGroup;\n","// Select.js\nimport React from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SelectProxy from \"@material-ui/core/Select\";\n\nconst Select = ({ name, label, options, id, value, onChange }) => {\n    return (\n        <div className=\"MuiFormControlOverrides select-wrapper input-field col\">\n            <FormControl>\n                <InputLabel id={id}>{label}</InputLabel>\n                <SelectProxy\n                    name={name}\n                    labelId={`${id}-select-label`}\n                    id={`${id}-select`}\n                    value={value}\n                    onChange={onChange}\n                >\n                    {options.map((opt, idx) => (\n                        <MenuItem\n                            key={`select-${opt.value}-${idx}`}\n                            value={opt.value}\n                        >\n                            {opt.label}\n                        </MenuItem>\n                    ))}\n                </SelectProxy>\n            </FormControl>\n        </div>\n    );\n};\n\nexport default Select;\n","import Select from \"./Select\";\nimport \"./select.css\";\n\nexport default Select;\n","export const API_URL =\n    \"https://launch.micronaut.io\";\nexport const JAVA_VERSIONS = [8, 9, 10, 11, 12, 13, 14];\nexport const MICRONAUT_VERSIONS = [\n    {label:\"2.0.0.M3\", value:\"2.0.0.M3\"}\n];\nexport const LANG_OPTS = [\n    { label: \"Java\", value: \"java\" },\n    { label: \"Kotlin\", value: \"kotlin\" },\n    { label: \"Groovy\", value: \"groovy\" },\n];\n\nexport const BUILD_OPTS = [\n    { label: \"Gradle\", value: \"gradle\" },\n    { label: \"Maven\", value: \"maven\" },\n];\n\nexport const TEST_OPTS = [\n    { value: \"junit\", label: \"JUnit\" },\n    { value: \"spock\", label: \"Spock\" },\n    { value: \"kotlintest\", label: \"Kotlintest\" },\n];\n\nexport const DEFAULT_JAVA_VERSION = 11;\nexport const DEFAULT_LANG = \"java\";\nexport const DEFAULT_BUILD = \"gradle\";\nexport const DEFAULT_TEST_FW = \"junit\";\n","// StarterForm.js\nimport React from \"react\";\nimport { TextInput } from \"react-materialize\";\nimport Col from \"react-materialize/lib/Col\";\nimport Row from \"react-materialize/lib/Row\";\nimport RadioGroup from \"../RadioGroup\";\nimport Select from \"../Select\";\n\nimport {\n    JAVA_VERSIONS,\n    LANG_OPTS,\n    BUILD_OPTS,\n    TEST_OPTS,\n    MICRONAUT_VERSIONS\n} from \"../../constants\";\n\nconst JAVA_OPTS = JAVA_VERSIONS.map((v) => ({\n    label: v.toString(),\n    value: v.toString(),\n}));\n\nconst StarterForm = ({ handleChange, ...props }) => {\n    return (\n        <Row className=\"mn-starter-form-main\">\n            <Col l={4} m={8} s={8}>\n                <Select\n                    s={12}\n                    className=\"mn-input\"\n                    label=\"Application Type\"\n                    value={props.type}\n                    name=\"type\"\n                    options={props.types.map((t) => ({\n                        value: t.name,\n                        label: t.title,\n                    }))}\n                    onChange={handleChange}\n                ></Select>\n            </Col>\n            <Col l={2} m={4} s={4} className=\"mn-radio\">\n                <Select\n                    s={12}\n                    label=\"Java Version\"\n                    value={props.javaVersion.toString()}\n                    name=\"javaVersion\"\n                    onChange={handleChange}\n                    options={JAVA_OPTS}\n                ></Select>\n            </Col>\n            <Col s={8} m={6} l={3}>\n                <TextInput\n                    required\n                    s={12}\n                    className=\"mn-input\"\n                    label=\"Base Package\"\n                    name=\"package\"\n                    placeholder=\"ex: com.mycompany\"\n                    value={props.package}\n                    onChange={handleChange}\n                />\n            </Col>\n            <Col s={4} m={6} l={3}>\n                <TextInput\n                    required\n                    s={12}\n                    className=\"mn-input\"\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"ex: myapp\"\n                    value={props.name}\n                    onChange={handleChange}\n                />\n            </Col>\n            <Col m={3} s={12} className=\"mn-radio\">\n                <RadioGroup\n                    label=\"Micronaut Version\"\n                    id=\"version\"\n                    name=\"version\"\n                    value=\"2.0.0.M3\"\n                    // onChange={handleChange}\n                    options={MICRONAUT_VERSIONS}\n                />\n            </Col>            \n            <Col m={3} s={12} className=\"mn-radio\">\n                <RadioGroup\n                    label=\"Language\"\n                    id=\"lang\"\n                    name=\"lang\"\n                    value={props.lang}\n                    onChange={handleChange}\n                    options={LANG_OPTS}\n                />\n            </Col>\n            <Col m={3} s={12} className=\"mn-radio\">\n                <RadioGroup\n                    label=\"Build\"\n                    id=\"build\"\n                    name=\"build\"\n                    value={props.build}\n                    onChange={handleChange}\n                    options={BUILD_OPTS}\n                />\n            </Col>\n            <Col m={3} s={12} className=\"mn-radio\">\n                <RadioGroup\n                    label=\"Test Framework\"\n                    id=\"testFw\"\n                    name=\"testFw\"\n                    value={props.testFw}\n                    onChange={handleChange}\n                    options={TEST_OPTS}\n                />\n            </Col>\n        </Row>\n    );\n};\n\nexport default StarterForm;\n","import StarterForm from \"./StarterForm\";\nimport \"./starter-form.css\";\n\nexport default StarterForm;\n","// ErrorView.js\nimport React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport logo from \"../../images/micronaut-white-icon.png\";\nconst ErrorView = ({ error, errorMessage, onClose }) => {\n    const open = Boolean(errorMessage && error);\n\n    return (\n        <Snackbar\n            className=\"error-view\"\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            open={open}\n            // autoHideDuration={6000}\n        >\n            <Alert\n                icon={<Avatar src={logo}>N</Avatar>}\n                onClose={onClose}\n                severity=\"error\"\n            >\n                {errorMessage}\n            </Alert>\n        </Snackbar>\n    );\n};\n\nexport default React.memo(\n    ErrorView,\n    (next, prev) =>\n        next.errorMessage === prev.errorMessage && next.error === prev.error\n);\n","import ErrorView from \"./ErrorView\";\nimport \"./error-view.css\";\n\nexport default ErrorView;\n","import React, { Component, Fragment } from \"react\";\nimport { ProgressBar } from \"react-materialize\";\nimport Col from \"react-materialize/lib/Col\";\nimport Icon from \"react-materialize/lib/Icon\";\nimport Row from \"react-materialize/lib/Row\";\nimport {\n  FeatureSelectorModal,\n  FeatureSelectedList,\n} from \"./components/FeatureSelector\";\nimport CodePreview from \"./components/CodePreview\";\nimport Diff from \"./components/Diff\";\nimport Header from \"./components/Header\";\nimport StarterForm from \"./components/StarterForm\";\nimport ErrorView from \"./components/ErrorView\";\nimport TooltipButton from \"./components/TooltipButton\";\n\nimport {\n  API_URL,\n  DEFAULT_JAVA_VERSION,\n  DEFAULT_LANG,\n  DEFAULT_BUILD,\n  DEFAULT_TEST_FW,\n} from \"./constants\";\nimport messages from \"./constants/messages.json\";\n\nimport { makeNodeTree } from \"./utility\";\n\nimport \"./style.css\";\nimport \"./styles/button-row.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"demo\",\n      package: \"com.example\",\n      types: [],\n      type: \"DEFAULT\",\n      lang: DEFAULT_LANG,\n      build: DEFAULT_BUILD,\n      testFw: DEFAULT_TEST_FW,\n      javaVersion: DEFAULT_JAVA_VERSION,\n      loadingFeatures: false,\n      featuresToSelect: [],\n      featuresSelected: {},\n      downloading: false,\n      error: false,\n      errorMessage: \"\",\n      styleMode: window.localStorage.getItem(\"styleMode\") || \"light\",\n    };\n    this.previewButton = null;\n    this.diffButton = null;\n  }\n\n  componentDidMount() {\n    this.loadAppTypes();\n    this.loadFeatures(this.state.type);\n  }\n\n  loadAppTypes = () => {\n    fetch(API_URL + \"/application-types\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Failed to load the application types\");\n        }\n      })\n      .then((data) => {\n        console.log(\"data\", data);\n        const types = [];\n        data.types.forEach((t) => {\n          types.push({ name: t.name.toUpperCase(), title: t.title });\n        });\n        this.setState({ types });\n      })\n      .catch((error) => {\n        this.setState({ error: true, errorMessage: error.message });\n      });\n  };\n\n  loadFeatures = (appType) => {\n    this.setState({ loadingFeatures: true });\n    fetch(API_URL + \"/application-types/\" + appType + \"/features\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Failed to load the available features\");\n        }\n      })\n      .then((data) => {\n        this.setState({\n          featuresToSelect: data.features,\n          loadingFeatures: false,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          error: true,\n          loadingFeatures: false,\n          errorMessage: error.message,\n        });\n      });\n  };\n\n  addFeature = (feature) => {\n    let featuresSelected = { ...this.state.featuresSelected };\n    featuresSelected[feature.name] = feature;\n    this.setState({\n      featuresSelected,\n    });\n  };\n\n  removeAllFeatures = () => {\n    this.setState({ featuresSelected: {} });\n  };\n\n  removeFeature = (feature) => {\n    let featuresSelected = { ...this.state.featuresSelected };\n    delete featuresSelected[feature.name];\n    this.setState({ featuresSelected });\n  };\n\n  handleChange = (event) => {\n    // Strip out any non alphanumeric characters (or \".\",\"-\",\"_\") from the input.\n    const value = event.target.value.replace(/[^a-z\\d.\\-_]/gi, \"\");\n    this.setState({\n      [event.target.name]: value,\n    });\n    if (event.target.name === \"type\") {\n      this.loadFeatures(event.target.value);\n    }\n  };\n\n  buildFeaturesQuery = () => {\n    return Object.keys(this.state.featuresSelected)\n      .reduce((array, feature) => {\n        array.push(`features=${feature}`);\n        return array;\n      }, [])\n      .join(\"&\");\n  };\n\n  buildFetchUrl = (prefix) => {\n    if (!prefix) {\n      console.error(\n        \"A prefix is required, should be one of 'diff', 'preview' or 'create'\"\n      );\n    }\n    const { type, name, lang, build, testFw, javaVersion } = this.state;\n    const features = this.buildFeaturesQuery();\n    const fqpkg = `${this.state.package}.${name}`;\n    const base = `${API_URL}/${prefix}/${type}/${fqpkg}`;\n    const query = [\n      `lang=${lang}`,\n      `build=${build}`,\n      `test=${testFw}`,\n      `javaVersion=JDK_${javaVersion}`,\n    ];\n    if (features) {\n      query.push(features);\n    }\n    return encodeURI(`${base}?${query.join(\"&\")}`);\n  };\n\n  handleResponseError = (response) => {\n    let defaultError = {\n      error: true,\n      downloading: false,\n      errorMessage: \"something went wrong.\",\n    };\n    if (!response.json instanceof Function) {\n      this.setState(defaultError);\n      return;\n    }\n    try {\n      response.json().then((body) => {\n        this.setState({\n          ...defaultError,\n          errorMessage: body.message,\n        });\n      });\n    } catch (e) {\n      this.setState(defaultError);\n    }\n  };\n\n  responseHandler = (type = \"json\") => (response) => {\n    if (!response.ok) {\n      throw response;\n    }\n    return response[type]();\n  };\n\n  debounceResponse = (start, atLeast = 700) => (response) => {\n    const end = Date.now();\n    const diff = end - start;\n    return new Promise((r) => {\n      setTimeout(() => {\n        r(response);\n      }, Math.max(atLeast - diff, 0));\n    });\n  };\n\n  generateProject = (e) => {\n    e.preventDefault();\n    this.setState({ error: false, downloading: true });\n\n    const FETCH_URL = this.buildFetchUrl(\"create\");\n    // Debounce the download event so the UI is not jumpy\n    const debounced = this.debounceResponse(Date.now());\n    fetch(FETCH_URL, {\n      method: \"GET\",\n    })\n      .then(debounced)\n      .then(this.responseHandler(\"blob\"))\n      .then((blob) => {\n        var url = window.URL.createObjectURL(blob);\n        var a = document.createElement(\"a\");\n        a.href = url;\n        a.download = this.state.name + \".zip\";\n        document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n        a.click();\n        a.remove(); //afterwards we remove the element again\n        this.setState({ downloading: false });\n      })\n      .catch(this.handleResponseError);\n  };\n\n  loadPreview = (e) => {\n    e.preventDefault();\n    this.setState({ error: false, downloading: true });\n    let FETCH_URL = this.buildFetchUrl(\"preview\");\n\n    // Debounce the preview gen event so the UI is not jumpy\n    const debounced = this.debounceResponse(Date.now());\n    fetch(FETCH_URL, {\n      method: \"GET\",\n    })\n      .then(debounced)\n      .then(this.responseHandler(\"json\"))\n      .then((json) => {\n        const nodes = makeNodeTree(json.contents);\n        this.setState({ preview: nodes, downloading: false });\n        this.previewButton.props.onClick();\n      })\n      .catch(this.handleResponseError);\n  };\n\n  loadDiff = (e) => {\n    this.setState({ error: false, downloading: true });\n    e.preventDefault();\n    let FETCH_URL = this.buildFetchUrl(\"diff\");\n\n    fetch(FETCH_URL, {\n      method: \"GET\",\n    })\n      .then(this.responseHandler(\"text\"))\n      .then((text) => {\n        if (text === \"\") {\n          this.setState({\n            error: true,\n            errorMessage: \"No features have been selected. Please choose one or more features and try again.\",\n            downloading: false,\n          });\n        } else {\n          this.setState({ diff: text, downloading: false });\n          this.diffButton.props.onClick();\n        }\n\n      })\n      .catch(this.handleResponseError);\n  };\n\n  clearDiff = () => {\n    this.setState({\n      diff: null,\n    });\n  };\n\n  clearPreview = () => {\n    this.setState({\n      preview: {},\n    });\n  };\n\n  getStyleMode() {\n    return this.state.styleMode;\n  }\n\n  toggleStyleMode() {\n    let style = this.getStyleMode() === \"light\" ? \"dark\" : \"light\";\n    this.setState({ styleMode: style });\n    window.localStorage.setItem(\"styleMode\", style);\n  }\n\n  render() {\n    const theme = this.getStyleMode();\n    document.body.className = theme;\n    const disabled =\n      this.state.downloading ||\n      !this.state.name ||\n      !this.state.package ||\n      this.state.loadingFeatures;\n\n    return (\n      <Fragment>\n        <div id=\"mn-main-container\" className=\"mn-main-container sticky\">\n          <div className=\"container\">\n            <Header\n              theme={theme}\n              onToggleTheme={() => this.toggleStyleMode()}\n            />\n\n            <div className=\"mn-container\">\n              <form onSubmit={this.generateProject} autoComplete=\"off\">\n                <StarterForm\n                  theme={theme}\n                  handleChange={this.handleChange}\n                  {...this.state}\n                />\n\n                <Row className=\"button-row\">\n                  <Col s={3} className=\"xs6\">\n                    <FeatureSelectorModal\n                      theme={theme}\n                      loading={this.state.loadingFeatures}\n                      features={this.state.featuresToSelect}\n                      selectedFeatures={this.state.featuresSelected}\n                      onAddFeature={this.addFeature}\n                      onRemoveFeature={this.removeFeature}\n                      onRemoveAllFeatures={this.removeAllFeatures}\n                    />\n                  </Col>\n                  <Col s={3} className=\"xs6\">\n                    <Diff\n                      ref={(button) => (this.diffButton = button)}\n                      theme={theme}\n                      diff={this.state.diff}\n                      lang={this.state.lang}\n                      build={this.state.build}\n                      onLoad={this.loadDiff}\n                      onClose={this.clearDiff}\n                      disabled={\n                        this.state.downloading ||\n                        !this.state.name ||\n                        !this.state.package ||\n                        this.state.loadingFeatures\n                      }\n                    />\n                  </Col>\n                  <Col s={3} className=\"xs6\">\n                    <CodePreview\n                      ref={(button) => (this.previewButton = button)}\n                      theme={theme}\n                      preview={this.state.preview}\n                      lang={this.state.lang}\n                      build={this.state.build}\n                      onLoad={this.loadPreview}\n                      onClose={this.clearPreview}\n                      disabled={disabled}\n                    />\n                  </Col>\n                  <Col s={3} className=\"xs6\">\n                    <TooltipButton\n                      tooltip={messages.tooltips.generate}\n                      disabled={disabled}\n                      waves=\"light\"\n                      className={theme}\n                      style={{ marginRight: \"5px\", width: \"100%\" }}\n                    >\n                      <Icon className=\"action-button-icon\" left>\n                        get_app\n                      </Icon>\n                      Generate project\n                    </TooltipButton>\n                  </Col>\n                </Row>\n              </form>\n              {this.state.downloading ? (\n                <ProgressBar />\n              ) : (\n                <div style={{ minHeight: \"18px\", height: \"18px\" }} />\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"container mn-feature-container\">\n          <FeatureSelectedList\n            theme={theme}\n            selectedFeatures={this.state.featuresSelected}\n            onRemoveFeature={this.removeFeature}\n          />\n        </div>\n        <ErrorView\n          error={this.state.error}\n          errorMessage={this.state.errorMessage}\n          onClose={() => this.setState({ error: false, errorMessage: \"\" })}\n        />\n      </Fragment>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}