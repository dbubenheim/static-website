buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadowJarVersion"
        classpath "gradle.plugin.org.openrepose:gradle-linkchecker-plugin:$gradleLinkcheckerPluginVersion"
        classpath "gradle.plugin.org.aim42:htmlSanityCheck:$htmlSanityCheckVersion"
        classpath "com.github.node-gradle:gradle-node-plugin:$gradleNodePluginVersion"
    }
}

apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: "org.openrepose.gradle.plugins.linkchecker"
apply plugin: 'org.aim42.htmlSanityCheck'

ext {
    siteDir = 'site'
}

repositories {
    jcenter()
}

mainClassName = "io.micronaut.main.Main"


dependencies {
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"
    compile "com.vladsch.flexmark:flexmark-all:$flexmarkVersion"
    testCompile "org.spockframework:spock-core:$spockVersion"
    compile project(':micronaut-navigation-core')
    compile "org.yaml:snakeyaml:$yamlVersion"
}

apply plugin: "com.github.node-gradle.node"

node {
    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${rootProject.projectDir}/main/src/main/js/launch")
}

task buildStarter(type: NpmTask) {
    dependsOn npmInstall
    workingDir = file("${rootProject.projectDir}/main/src/main/js/launch")
    args = ['run', 'build']
}

task createSiteFolder {
    doLast {
        file("${project.buildDir}/${siteDir}").mkdirs()
        file("${project.buildDir}/${siteDir}/profiles").mkdirs()
        file("${project.buildDir}/${siteDir}/profiles/web").mkdirs()
        file("${project.buildDir}/${siteDir}/profiles/rest-api").mkdirs()
        file("${project.buildDir}/${siteDir}/profiles/angularjs").mkdirs()
        file("${project.buildDir}/${siteDir}/profiles/angular").mkdirs()
        file("${project.buildDir}/${siteDir}/profiles/react").mkdirs()
        file("${project.buildDir}/${siteDir}/profiles/vue").mkdirs()
        file("${project.buildDir}/${siteDir}/profiles/react-webpack").mkdirs()
        file("${project.buildDir}/${siteDir}/profiles/webpack").mkdirs()
        file("${project.buildDir}/${siteDir}/profiles/plugin").mkdirs()
        file("${project.buildDir}/${siteDir}/profiles/rest-api-plugin").mkdirs()
        file("${project.buildDir}/${siteDir}/profiles/web-plugin").mkdirs()
    }
}

task copyAssets {
    doLast {
        copy {
            from "${rootProject.projectDir}/main/src/main/resources/assets/images"
            into "${project.buildDir}/${siteDir}/images"
            include '*.gif'
            include '*.jpg'
            include '*.svg'
            include '*.png'
            include '*.ico'
        }
        copy {
            from "${rootProject.projectDir}/main/src/main/resources/assets/images/books"
            into "${project.buildDir}/${siteDir}/images/books"
            include '*.gif'
            include '*.jpg'
            include '*.png'
            include '*.svg'
            include '*.ico'
        }
        copy {
            from "${rootProject.projectDir}/main/src/main/resources/assets/images/confs"
            into "${project.buildDir}/${siteDir}/images/confs"
            include '*.gif'
            include '*.jpg'
            include '*.png'
            include '*.svg'
            include '*.ico'
        }
        copy {
            from "${rootProject.projectDir}/main/src/main/resources/assets/images/banners"
            into "${project.buildDir}/${siteDir}/images/banners"
            include '*.gif'
            include '*.jpg'
            include '*.png'
            include '*.svg'
            include '*.ico'
        }
        copy {
            from "${rootProject.projectDir}/main/src/main/resources/assets/images"
            into "${project.buildDir}/${siteDir}/images"
            include '*.gif'
            include '*.jpg'
            include '*.png'
            include '*.svg'
            include '*.ico'
        }
        copy {
            from "${rootProject.projectDir}/main/src/main/resources/assets/stylesheets"
            into "${project.buildDir}/${siteDir}/stylesheets"
            include '*.css'
        }
        copy {
            from "${rootProject.projectDir}/main/src/main/resources/assets/fonts"
            into "${project.buildDir}/${siteDir}/fonts"
            include '*.eot'
            include '*.svg'
            include '*.ttf'
            include '*.woff'
            include '*.woff2'
        }

        copy {
            from "${rootProject.projectDir}/main/src/main/resources/assets/javascripts"
            into "${project.buildDir}/${siteDir}/javascripts"
            include '*.js'
        }
        copy {
            from "${rootProject.projectDir}/main/src/main/js/launch/build"
            into "${project.buildDir}/${siteDir}/launch"
        }
        copy {
            from "${rootProject.projectDir}/main/src/main/resources/start"
            into "${project.buildDir}/${siteDir}/start"
            include '*.html'
        }
    }
}

copyAssets.dependsOn = ['createSiteFolder', 'buildStarter']

processResources.dependsOn = ['copyAssets']

linkchecker {
    inputDir = new File("${project.buildDir}/${siteDir}")
}
runShadow.finalizedBy 'linkchecker'

htmlSanityCheck {
    sourceDir = new File("${project.buildDir}/${siteDir}")
}
runShadow.finalizedBy(htmlSanityCheck)
