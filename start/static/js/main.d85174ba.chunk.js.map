{"version":3,"sources":["constants/index.js","App.jsx","index.js","micronaut.png"],"names":["API_URL","JAVA_VERSIONS","App","props","searchFeature","event","value","target","setState","featureSearch","featuresMap","Map","state","featuresToSelect","keysSearched","Array","from","keys","filter","el","toLowerCase","indexOf","resultMap","forEach","key","set","get","results","Object","entries","mapToObject","featureSearchResults","map","obj","v","k","loadAppTypes","fetch","then","response","ok","json","Error","data","console","log","types","t","push","name","toUpperCase","title","catch","error","loadFeatures","appType","loadingFeatures","features","description","addFeature","feature","indexOfFeature","featuresSelected","f","i","splice","removeFeature","e","index","preventDefault","generateProject","downloading","FETCH_URL","type","package","lang","build","testFw","javaVersion","method","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove","handleChange","loadPreview","nodes","contents","node","length","folders","split","rootNode","preview","clearPreview","currentFile","currentFileLanguage","handleFileSelection","language","idx","lastIndexOf","substring","info","this","className","src","logo","width","alt","onSubmit","autoComplete","s","label","onChange","required","placeholder","version","active","flashing","size","onClick","floating","small","disabled","waves","style","marginRight","backgroundColor","left","header","options","onOpenStart","onCloseStart","trigger","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","defaultExpanded","renderTree","children","TreeItem","nodeId","prism","showLineNumbers","color","open","rel","height","weight","Component","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d85174ba.chunk.js","sourcesContent":["export const API_URL = \"http://micronaut-starter-staging-ucxwqnh6ka-uc.a.run.app\";\nexport const JAVA_VERSIONS = [8, 9, 10, 11, 12, 13, 14];\nexport const DEFAULT_JAVA_VERSION = 11;\nexport const DEFAULT_LANG = \"java\";\nexport const DEFAULT_BUILD = \"gradle\";\nexport const DEFAULT_TEST_FW = \"junit\";","import React, { Component, Fragment } from \"react\";\nimport { Button, Card, ProgressBar, Select } from \"react-materialize\";\nimport Col from \"react-materialize/lib/Col\";\nimport Icon from \"react-materialize/lib/Icon\";\nimport Modal from \"react-materialize/lib/Modal\";\nimport Preloader from \"react-materialize/lib/Preloader\";\nimport Row from \"react-materialize/lib/Row\";\nimport TextInput from \"react-materialize/lib/TextInput\";\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n//import { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport { prism } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport { API_URL, JAVA_VERSIONS, DEFAULT_JAVA_VERSION, DEFAULT_LANG, DEFAULT_BUILD, DEFAULT_TEST_FW } from './constants';\nimport logo from \"./micronaut.png\";\nimport \"./style.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"demo\",\n      package: \"com.example\",\n      types: [],\n      type: \"DEFAULT\",\n      lang: DEFAULT_LANG,\n      build: DEFAULT_BUILD,\n      testFw: DEFAULT_TEST_FW,\n      javaVersion: DEFAULT_JAVA_VERSION,\n      loadingFeatures: false,\n      features: [],\n      featureSearch: \"\",\n      featuresToSelect: [],\n      featureSearchResults: Object.entries({}),\n      featuresSelected: Object.entries({}),\n      downloading: false,\n      info: false,\n      error: false\n    };\n  }\n\n  searchFeature = event => {\n    const value = event.target.value;\n    this.setState({ featureSearch: value });\n    if (value) {\n      const featuresMap = new Map(this.state.featuresToSelect);\n      const keysSearched = Array.from(featuresMap.keys()).filter(\n        el => el.toLowerCase().indexOf(value.toLowerCase()) > -1\n      );\n      const resultMap = new Map();\n      keysSearched.forEach(key => {\n        resultMap.set(key, featuresMap.get(key));\n      });\n      const results = Object.entries(this.mapToObject(resultMap));\n      this.setState({ featureSearchResults: results });\n    } else {\n      this.setState({ featureSearchResults: Object.entries({}) });\n    }\n  };\n\n  mapToObject = map => {\n    const obj = {};\n    map.forEach((v, k) => {\n      obj[k] = v;\n    });\n    return obj;\n  };\n\n  componentDidMount() {\n    this.loadAppTypes()\n    this.loadFeatures(this.state.type)\n  }\n\n  loadAppTypes = () => {\n    fetch(API_URL + '/application-types')\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Error when checking micronaut versions on GitHub');\n        }\n      })\n      .then((data) => {\n        console.log(\"data\", data)\n        const types = []\n        data.types.forEach((t) => {\n          types.push({name: t.name.toUpperCase(), title: t.title})\n        })\n        this.setState({ types })\n      })\n      .catch((error) => {\n        this.setState({error: true})\n      })\n  }\n\n  loadFeatures = (appType) => {\n    console.log(\"Loading features of \", appType)\n    this.setState({loadingFeatures: true})\n    fetch(API_URL + '/application-types/' + appType + \"/features\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Error when checking micronaut versions on GitHub');\n        }\n      })\n      .then((data) => {\n        console.log(\"data\", data)\n        const features = []\n        data.features.forEach((t) => {\n          features.push([t.name, t.description])\n        })\n        this.setState({ featuresToSelect: features, loadingFeatures: false })\n      })\n      .catch((error) => {\n        this.setState({error: true, loadingFeatures: false})\n      })\n  }\n\n  addFeature = feature => {\n    let featuresSelected = this.state.featuresSelected;\n    let featuresToSelect = this.state.featuresToSelect;\n    let features = this.state.features;\n    featuresSelected.push(feature);\n    features.push(feature[0]);\n    let indexOfFeature;\n    // eslint-disable-next-line\n    featuresToSelect.map((f, i) => {\n      if (f[0] === feature[0]) {\n        return (indexOfFeature = i);\n      }\n    });\n    featuresToSelect.splice(indexOfFeature, 1);\n    this.setState({\n      featuresToSelect,\n      featuresSelected,\n      features,\n      featureSearchResults: Object.entries({}),\n      featureSearch: \"\"\n    });\n  };\n\n  removeFeature = (e, feature, index) => {\n    e.preventDefault();\n    const featuresSelected = this.state.featuresSelected;\n    const featuresToSelect = this.state.featuresToSelect;\n    featuresSelected.splice(index, 1);\n    featuresToSelect.push(feature);\n    this.setState({ featuresSelected, featuresToSelect });\n  };\n\n  generateProject = e => {\n    e.preventDefault();\n    this.setState({ downloading: true });\n\n    let features = \"\"\n\n    this.state.featuresSelected.forEach((feature) => {\n      features += \"features=\" + feature[0] + \"&\"\n    })\n\n    let FETCH_URL =\n      API_URL + \"/create/\" + this.state.type + \"/\" + \n      this.state.package + \".\" + this.state.name + \"/?\" +\n      features +\n      \"lang=\" +\n      this.state.lang +\n      \"&build=\" +\n      this.state.build +\n      \"&test=\" +\n      this.state.testFw +\n      \"&javaVersion=\" +\n      \"JDK_\" + this.state.javaVersion;\n\n    fetch(FETCH_URL, {\n      method: \"GET\"\n    })\n      .then(response => response.blob())\n      .then(blob => {\n        var url = window.URL.createObjectURL(blob);\n        var a = document.createElement(\"a\");\n        a.href = url;\n        a.download = this.state.name + \".zip\";\n        document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n        a.click();\n        a.remove(); //afterwards we remove the element again\n        this.setState({ downloading: false });\n      });\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    if (event.target.name === \"type\") {\n      this.loadFeatures(event.target.value)\n    }\n  };\n\n  loadPreview = () => {\n    let features = \"\"\n\n    this.state.featuresSelected.forEach((feature) => {\n      features += \"features=\" + feature[0] + \"&\"\n    })\n\n    let FETCH_URL =\n        API_URL + \"/preview/\" + this.state.type + \"/\" +\n        this.state.package + \".\" + this.state.name + \"/?\" +\n        features +\n        \"lang=\" +\n        this.state.lang +\n        \"&build=\" +\n        this.state.build +\n        \"&test=\" +\n        this.state.testFw +\n        \"&javaVersion=\" +\n        \"JDK_\" + this.state.javaVersion;\n\n    fetch(FETCH_URL, {\n      method: \"GET\"\n    })\n        .then(response => response.json())\n        .then(json => {\n          let nodes = {};\n          let obj = json.contents;\n          let node = nodes;\n          let keys = Object.keys(obj);\n          for (let k = 0; k < keys.length; k++) {\n            let key = keys[k];\n            let folders = key.split(\"/\");\n            let rootNode = node;\n            for (let i = 0; i < folders.length; i++) {\n              if (i === (folders.length - 1)) {\n                node[folders[i]] = obj[key];\n              } else {\n                node[folders[i]] = node[folders[i]] || {};\n                node = node[folders[i]];\n              }\n            }\n            node = rootNode;\n          }\n          this.setState({preview: nodes});\n        });\n\n  };\n\n  clearPreview = () => {\n    this.setState({preview: {}, currentFile: null, currentFileLanguage: null});\n  }\n\n\n  handleFileSelection = (key, contents) => {\n    if (typeof contents === \"string\") {\n      let idx = key.lastIndexOf(\".\");\n      let language;\n      if (idx > -1) {\n        language = key.substring(idx + 1);\n        if (language === \"gradle\") {\n          language = \"groovy\";\n        }\n        if (language === \"bat\") {\n          language = \"batch\";\n        }\n        if (language === \"kt\") {\n          language = \"kotlin\";\n        }\n      } else {\n        language = \"bash\"\n      }\n      this.setState({currentFile: contents, currentFileLanguage: language});\n    }\n  }\n\n\n  render() {\n    const renderTree = (nodes) => {\n      if (nodes instanceof Object) {\n        return Object.keys(nodes).map(key => {\n          let children = nodes[key];\n          return (\n              <TreeItem nodeId={key} label={key} onClick={() => this.handleFileSelection(key, children)}>\n                {renderTree(children)}\n              </TreeItem>\n          );\n        });\n      }\n    };\n\n    return (\n      <Fragment>\n        <div className=\"container\">\n          <img src={logo} width=\"50%\" alt=\"Micronaut\" className=\"mn-logo\" />\n          <div className=\"mn-container\">\n            <form onSubmit={this.generateProject} autoComplete=\"off\">\n              <Row>\n                <Col s={4}>\n                    <Select\n                      s={12}\n                      label=\"Application Type\"\n                      value={this.state.type}\n                      name=\"type\"\n                      onChange={this.handleChange}\n                    >\n                      {\n                        this.state.types.map((type, i) => {\n                          return <option key={i} value={type.name}>{type.title}</option>\n                        })\n                      }\n                    </Select>\n                </Col>\n                <Col s={4}>\n                  <TextInput\n                    required\n                    s={12}\n                    className=\"mn-input\"\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"ex: myapp\"\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                  />\n                </Col>\n                <Col s={4}>\n                  <TextInput\n                    required\n                    s={12}\n                    className=\"mn-input\"\n                    label=\"Base Package\"\n                    name=\"package\"\n                    placeholder=\"ex: com.mycompany\"\n                    value={this.state.package}\n                    onChange={this.handleChange}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col s={3}>\n                  <Select\n                    s={12}\n                    label=\"Language\"\n                    value={this.state.lang}\n                    name=\"lang\"\n                    onChange={this.handleChange}\n                  >\n                    <option value=\"java\">Java</option>\n                    <option value=\"kotlin\">Kotlin</option>\n                    <option value=\"groovy\">Groovy</option>\n                  </Select>\n                </Col>\n                <Col s={3}>\n                  <Select\n                    s={12}\n                    label=\"Build\"\n                    value={this.state.build}\n                    name=\"build\"\n                    onChange={this.handleChange}\n                  >\n                    <option value=\"gradle\">Gradle</option>\n                    <option value=\"maven\">Maven</option>\n                  </Select>\n                </Col>\n                <Col s={3}>\n                  <Select\n                    s={12}\n                    label=\"Test Framework\"\n                    value={this.state.testFw}\n                    name=\"testFw\"\n                    onChange={this.handleChange}\n                  >\n                    <option value=\"junit\">JUnit</option>\n                    <option value=\"spock\">Spock</option>\n                    <option value=\"kotlintest\">Kotlintest</option>\n                  </Select>\n                </Col>\n                <Col s={3}>\n                  <Select\n                    s={12}\n                    label=\"Java Version\"\n                    value={this.state.javaVersion}\n                    name=\"javaVersion\"\n                    onChange={this.handleChange}\n                  >\n                    {\n                      JAVA_VERSIONS.map((version, i) => {\n                          return <option key={i} value={version}>{version}</option>\n                      })\n                    }\n                  </Select>\n                </Col>\n              </Row>\n              <Row>\n                {this.state.loadingFeatures ?\n                <Col s={6}>\n                  <Preloader\n                    active\n                    flashing={false}\n                    size=\"big\"\n                  />\n                </Col>\n                :\n                <Col s={6}>\n                  <TextInput\n                    className=\"mn-input\"\n                    s={12}\n                    label=\"Features\"\n                    placeholder=\"ex: cassandra\"\n                    value={this.state.featureSearch}\n                    onChange={this.searchFeature}\n                  />\n                  {this.state.featureSearch &&\n                    this.state.featureSearchResults.length === 0 ? (\n                      <Col s={12}>\n                        <p className=\"grey-text\">No results.</p>\n                      </Col>\n                    ) : null}\n                  {this.state.featureSearchResults.map((feature, i) => (\n                    <Col s={12} key={i}>\n                      <Card\n                        className=\"white mn-feature-selection\"\n                        title={feature[0]}\n                        onClick={() => this.addFeature(feature)}\n                      >\n                        <p className=\"grey-text\">{feature[1]}</p>\n                      </Card>\n                    </Col>\n                  ))}\n                </Col>}\n                <Col s={6}>\n                  <b>Selected features</b>\n                  {this.state.featuresSelected.length === 0 ? (\n                    <p className=\"grey-text\">No features selected.</p>\n                  ) : null}\n                  <Row>\n                    {this.state.featuresSelected.map((feature, i) => (\n                      <Card className=\"white\" title={feature[0]} key={i}>\n                        <Row>\n                          <Col s={11}>\n                            <p className=\"grey-text\">{feature[1]}</p>\n                          </Col>\n                          <Col s={1}>\n                            <Button\n                              floating\n                              small\n                              className=\"black\"\n                              onClick={(e) => this.removeFeature(e, feature, i)}\n                            >\n                              <Icon>close</Icon>\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Card>\n                    ))}\n                  </Row>\n                </Col>\n              </Row>\n              <Row>\n                <Col s={3}>\n                  <Button\n                    disabled={this.state.downloading || !this.state.name || !this.state.package || this.state.loadingFeatures}\n                    waves=\"light\"\n                    style={{ marginRight: \"5px\", backgroundColor: \"black\" }}\n                  >\n                    <Icon left>add</Icon>\n                    Generate project\n                  </Button>\n                </Col>\n                <Col s={3}>\n                  <Modal\n                      header=\"Preview\"\n                      className=\"wide\"\n                      options={{\n                        onOpenStart: this.loadPreview,\n                        onCloseStart: this.clearPreview\n                      }}\n                      trigger={\n                        <Button\n                            disabled={this.state.downloading || !this.state.name || !this.state.package || this.state.loadingFeatures}\n                            waves=\"light\"\n                            style={{ marginRight: \"5px\", backgroundColor: \"black\" }}\n                        >\n                          <Icon left>search</Icon>\n                          Preview\n                        </Button>\n                      }\n                  >\n\n                    <Row>\n                      <Col s={3}>\n                        <TreeView\n                            defaultCollapseIcon={<Icon>folder_open</Icon>}\n                            defaultExpandIcon={<Icon>folder</Icon>}\n                            defaultEndIcon={<Icon>insert_drive_file</Icon>}\n                            defaultExpanded={['src', 'main']}\n                        >\n                          {renderTree(this.state.preview)}\n                        </TreeView>\n                      </Col>\n                      <Col s={9} >\n\n                        {this.state.currentFile ?\n                          <SyntaxHighlighter language={this.state.currentFileLanguage} style={prism} showLineNumbers={true} >\n                          {this.state.currentFile}\n                          </SyntaxHighlighter> : \"\"\n                        }\n                      </Col>\n                    </Row>\n                  </Modal>\n                </Col>\n              </Row>\n            </form>\n            {this.state.downloading ? <ProgressBar /> : null}\n            {this.state.error ? <h5 style={{color: \"red\"}}>Oops. An error has ocurred.</h5> : null}\n          </div>\n        </div>\n        <div className=\"mn-footer\">\n          <Modal\n            open={this.state.info}\n            header=\"What's this?\"\n            trigger={\n              <Button\n                floating\n                className=\"black\"\n                onClick={() => this.setState({ info: true })}\n              >\n                <Icon>info</Icon>\n              </Button>\n            }\n          >\n            <p>\n              Micronaut Starter is a web application that allows you to create Micronaut projects through an interface instead of using the console CLI.\n              You can set the application type, the project name, the language (Java, Kotlin, Groovy), the build tool (Maven, Gradle), the Java version\n              and the features you need to develop your software.\n            </p>\n          </Modal>\n          <a\n            href=\"https://twitter.com/micronautfw\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mn-footer-logos\"\n          >\n            <img\n              src=\"https://image.flaticon.com/icons/png/512/23/23931.png\"\n              alt=\"Twitter\"\n              rel=\"noopener noreferrer\"\n              height=\"30px\"\n              weight=\"30px\"\n            />\n          </a>\n          <a\n            href=\"https://github.com/micronaut-projects\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mn-footer-logos\"\n          >\n            <img\n              src=\"https://image.flaticon.com/icons/svg/25/25231.svg\"\n              alt=\"GitHub\"\n              rel=\"noopener noreferrer\"\n              height=\"30px\"\n              weight=\"30px\"\n            />\n          </a>\n        </div>\n      </Fragment>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/micronaut.e89033cf.png\";"],"sourceRoot":""}